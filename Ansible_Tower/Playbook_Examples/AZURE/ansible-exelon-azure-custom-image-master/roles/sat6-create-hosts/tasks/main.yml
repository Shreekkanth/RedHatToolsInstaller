---
- name: "Ensure we have the Satellite Server's CA for validating authentication"
  stat:
    path: "/etc/pki/ca-trust/source/anchors/katello-server-ca.crt"
  delegate_to: "localhost"
  register: "ca_cert"

- name: "Obtain Satellite Server's CA for validating authentication"
  block:
    - name: "Download CA Certificate"
      get_url:
        url: "http://{{ sat6_fqdn }}/pub/katello-server-ca.crt"
        dest: "/etc/pki/ca-trust/source/anchors/katello-server-ca.crt"

    - name: "Update CA trust"
      command: "update-ca-trust"
  when: "not ca_cert.stat.exists"
  become: True

- name: "Obtain Satellite6 Organization ID"
  block:
    - include_role:
        name: "api"
      vars:
        api_task_name: "Obtain Satellite6 Organization ID"
        api_url_path: "katello/api/organizations"
        api_body: "{\"search\": \"{{ sat6_organization }}\"}"
        api_register_var: "org_qry"

    - debug:
        var: "org_qry.json.results[0]"
        verbosity: "1"

    - name: "Set Satellite6 Organization ID"
      set_fact:
        organization_id: "{{ org_qry.json.results[0].id }}"
      when: "org_qry.json.results[0].name == sat6_organization"

    - debug:
        var: "organization_id"
        verbosity: "1"
  tags:
    - "organization_id"

- set_fact:
    failed_hosts: []
    created_hosts: []

- name: "Create new Satellite 6 Hosts"
  include_tasks: "create_host.yml"
  with_items: "{{ sat6_hosts }}"
  loop_control:
    loop_var: "host"
    label: "{{ host.name }}"
  when: "sat6_hosts | length > 0"

# Output summary/failure messages based on several conditions
- debug:
    msg: "No hosts were created."
  when: "created_hosts | length < 1"

- fail:
    msg:
      - "List of hosts to provision missing."
      - "Variable sat6_hosts list empty."
  when: "sat6_hosts | length < 1"

- debug:
    msg:
      - "Host(s) created successfully:"
      - "{{ created_hosts }}"
  when: "created_hosts | length > 0"

# when we do want to fail the playbook on existing sat6 hosts
- fail:
    msg:
      - "Host(s) already exist in Satellite6:"
      - "{{ failed_hosts }}"
  when:
    - "fail_playbook | default(False)" #Default ensures we have a boolean value if we don't set fail_playbook
    - "sat6_fail_on_existing"

# when we don't want to fail the playbook on existing sat6 hosts
- debug:
    msg:
      - "Host(s) already exist in Satellite6:"
      - "{{ failed_hosts }}"
  when: "not sat6_fail_on_existing"
