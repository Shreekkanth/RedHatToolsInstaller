# Lots of problems here but a good start:-)
---
- name: Install and Configure Satellite Server from Base RHEL Installation
  hosts: satellite6
  become: true

  vars_files:
  - group_vars/all
  - sat_creds.yml

  tasks:
  - name: Set Timezone
    timezone:
      name: "{{TIMEZONE}}"
    tags: system_setup

  - name: set system hostname
    hostname:
      name: "{{sat_server_name}}"
    tags: system_setup

#  - name: Remove Existing Subscriptions
#    redhat_subscription:
#      state: absent
#      username: "{{ access_redhat_com_user }}" #defined in sat_creds.yml
#      password: "{{ access_redhat_com_password }}" #defined in sat_creds.yml
#    tags: system_setup

  - name: Register and Subscribe to RHEL and Satellite Pools
    redhat_subscription:
      state: present
      username: "{{ access_redhat_com_user }}" #defined in sat_creds.yml
      password: "{{ access_redhat_com_password }}" #defined in sat_creds.yml
      force_register: yes
      pool_ids: 
      - "{{ sat_pool_id }}" #defined in sat_creds.yml
    tags: system_setup
        
  - name: Disable all Repos
    command: subscription-manager repos --disable "*"
    tags: system_setup

  - name: Ensure subscription-manager not set to a specific version
    command: subscription-manager release --unset
    tags: system_setup

  - name: Enable Required Repos
    command: subscription-manager repos \
               --enable rhel-7-server-rpms \
               --enable rhel-server-rhscl-7-rpms \
               --enable rhel-7-server-ansible-2.7-rpms \
               --enable rhel-7-server-optional-rpms \
               --enable rhel-7-server-satellite-{{sat_version}}-rpms \
               --enable rhel-7-server-satellite-maintenance-6-rpms
    tags: system_setup

  - name: Ensure Subscription Manager is not set to use a specific RHEL Release
    command: subscription-manager release --unset
    tags: system_setup

  - name: clean any yum meta data
    command: yum -y clean all
    args:
      warn: no
    tags: system_setup
    
  - name: install chrony
    package:
      name: chrony
      state: latest
    tags: system_setup

  - name: setup chrony.conf file
    template:
      src: chrony.conf.j2
      dest: /etc/chrony.conf
      owner: root
      group: root
      mode: 0644
    tags: system_setup
    notify: restart chronyd

  - name: start and enable chronyd
    service:
      name: chronyd
      state: started
      enabled: yes
    tags: system_setup

  - name: update all packages
    yum:
      name: '*'
      state: latest
    tags: system_setup

  - name: install sos
    package:
      name: sos
      state: latest
    tags: system_setup

  - name: Ensure that firewalld is installed
    yum:
      name: firewalld
      state: latest
    tags: system_setup

  - name: Ensure that firewalld is started
    service:
      name: firewalld
      state: started
    tags: system_setup

  - name: assign eth0 to "public" zone
    firewalld:
      zone: public
      interface: eth0
      state: enabled
    tags: system_setup

  - name: deploy firewalld rules
    firewalld:
      zone: public
      immediate: yes
      port: "{{ item }}"
      state: enabled
      permanent: yes
    with_items:
      - "53/udp"
      - "53/tcp"
      - "67/udp"
      - "69/udp"
      - "80/tcp"
      - "443/tcp"
      - "5000/tcp"
      - "5647/tcp"
      - "8000/tcp"
      - "8140/tcp"
      - "9090/tcp"
    tags: system_setup

  - name: Install satellite
    yum:
      name: satellite
      state: latest
    tags: sat_inst

  - name: Execute satellite-installer
    command: satellite-installer --scenario satellite \
      --foreman-initial-organization "{{ foreman_initial_organization }}" \
      --foreman-initial-location "{{ foreman_initial_location }}" \
      --foreman-admin-username "{{ foreman_admin_username }}" \
      --foreman-admin-password "{{ foreman_admin_password }}" \
      --foreman-proxy-dns-managed=false \
      --foreman-proxy-dhcp-managed=false
    tags: sat_inst

#  - name: Execute satellite-installer
#    command: satellite-installer --scenario satellite \
#      --foreman-initial-organization "{{ foreman_initial_organization }}" \
#      --foreman-initial-location "{{ foreman_initial_location }}" \
#      --foreman-proxy-dns "{{ foreman_proxy_dns }}" \
#      --foreman-proxy-dns-interface "{{ foreman_proxy_dns_interface }}" \
#      --foreman-proxy-dns-zone "{{ foreman_proxy_dns_zone }}" \
#      --foreman-proxy-dns-forwarders "{{ foreman_proxy_dns_forwarders }}"  \
#      --foreman-proxy-dns-reverse "{{ foreman_proxy_dns_reverse }}" \
#      --foreman-proxy-tftp "{{ foreman_proxy_tftp }}" \
#      --foreman-proxy-tftp-servername "{{ foreman_proxy_tftp_servername }}" \
#      --foreman-admin-username "{{ foreman_admin_username }}" \
#      --foreman-admin-password "{{ foreman_admin_password }}"
#    tags: sat_inst

  - name: check to see if we need a reboot
    command: needs-restarting -r
    register: result
    ignore_errors: yes

  - name: display result
    debug:
      var: result.rc

  - name: Reboot Server if Necessary
    command: shutdown -r +1 "Ansible Updates Triggered"
    become: true
    async: 0
    poll: 0
    when: result.rc == 1

  - name: create {{user_home_dir}}/.hammer directory
    file:
      path: "{{user_home_dir}}/.hammer"
      owner: "{{user}}"
      group: "{{user}}"
      mode: 0700
      state: directory

  - name: install {{user_home_dir}}/.hammer/cli_config.yml
    template:
      src: cli_config.yml.j2
      dest: "{{user_home_dir}}/.hammer/cli_config.yml"
      owner: "{{user}}"
      group: "{{user}}"
      mode: 0600

  - name: Invoke hammer to create {{satellite_organization}} organization
    command: hammer organization create --name {{satellite_organization}}
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not create the organization: Name has already been taken
    tags: test

  - name: display result
    debug:
      var: result.rc
    tags: test

  - name: create {{user_home_dir}}/sat_files directory
    file:
      path: "{{user_home_dir}}/sat_files"
      owner: "{{user}}"
      group: "{{user}}"
      mode: 0700
      state: directory

  - name: copy manifest to satellite server
    copy:
      src: files/manifest_{{satellite_organization}}.zip
      dest: "{{user_home_dir}}/sat_files/manifest_{{satellite_organization}}.zip"
      owner: "{{user}}"
      group: "{{user}}"
      mode: 0644

  - name: Invoke hammer to install manifest for {{satellite_organization}}
    command: hammer  subscription upload --file {{user_home_dir}}/sat_files/manifest_{{satellite_organization}}.zip --organization {{satellite_organization}}
    register: result
    failed_when: "result.rc != 0 and result.rc != 70"
    changed_when: "result.rc == 0"
    # rc 70 = Error: Import is the same as existing data

  - name: Invoke hammer to create domain {{domain}}
    command: hammer domain create --name {{domain}}
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not create the domain: Domain already exists
    tags: test


#  - name: Invoke hammer to create location {{location_names}}
#    command: hammer location create --name {{item}}
#    with_items:
#      - "{{location_names}}"
#    register: result
#    failed_when: "result.rc != 0 and result.rc != 65"
#    changed_when: "result.rc == 0"
#    # rc 65 = Could not create the location: Name has already been taken
#    tags: test


  - name: Invoke hammer to assign locations to {{satellite_organization}}
    command: hammer location add-organization --name {{item}} --organization {{satellite_organization}}
    with_items:
      - "{{location_names}}"
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not create the location: Name has already been taken
    tags: test

  - name: Invoke hammer to assign locations to {{satellite_organization}}
    command: hammer location add-organization --name {{item}} --organization {{satellite_organization}}
    with_items:
      - "{{location_names}}"
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not create the location: Name has already been taken
    tags: test

  - name: display result
    debug:
      var: result.rc
    tags: test

  - name: Invoke hammer to add domain {{domain}} to {{satellite_organization}}
    command: hammer organization add-domain --name {{satellite_organization}} --domain {{domain}}
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not add the domain to org: Domain already added to org
    tags: test

  - name: display result
    debug:
      var: result.rc
    tags: test

#  - name: Invoke hammer to update domain {{domain}} with location_names
#    command: hammer domain update --name {{domain}} --organization {{satellite_organization}} --locations {{item}}
#    with_items:
#      - "{{location_names}}"
#    register: result
#    failed_when: "result.rc != 0 and result.rc != 65"
#    changed_when: "result.rc == 0"
#    # rc 65 = Could not add the locations to the domain
#    tags: test
#
  - name: Invoke hammer to update domain {{domain}} with Home-Office
    command: hammer domain update --name {{domain}} --organization {{satellite_organization}} --locations "Home-Office"
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not add the locations to the domain
    tags: test

  - name: display result
    debug:
      var: result.rc
    tags: test

  - name: Invoke hammer to update domain {{domain}} with organization_names
    command: hammer domain update --name {{domain}} --organization {{item}}
    with_items:
      - "{{satellite_organization}}"
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not add the locations to the domain
    tags: test

  - name: Invoke hammer to create location Home-Office
    command: hammer location create --name Home-Office
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    tags: test


################################################################################
# Configure RHEL Repos                                                         #
################################################################################
  - name: Invoke hammer to enable repositories with versions
    command: hammer repository-set enable --organization {{satellite_organization}} --product '{{item.product}}' --basearch='{{item.basearch}}' --releasever='{{item.version}}' --name '{{item.product_name}}'
    with_items:
      - "{{versioned_repos}}"
    register: result
    tags: 
      - enable_repos
    failed_when: "result.rc != 0 and result.rc != 70"
    changed_when: "result.rc == 0"
    # rc 70 = Error: 409 Conflict - Could not enable repository(already enabled)

  - name: Invoke hammer to enable repositories without versions
    command: hammer repository-set enable --organization {{satellite_organization}} --product '{{item.product}}' --basearch='{{item.basearch}}' --name '{{item.product_name}}'
    with_items:
      - "{{non_versioned_repos}}"
    register: result
    tags: 
      - enable_repos
    failed_when: "result.rc != 0 and result.rc != 70"
    changed_when: "result.rc == 0"
    # rc 70 = Error: 409 Conflict - Could not enable repository(already enabled)

  - name: define subnet
    command: hammer subnet create --name my_subnet --network 172.16.1.0 --mask 255.255.255.0 --gateway 172.16.1.1 --dns-primary 172.16.1.2 --domains internal.tjon.net --organization {{satellite_organization}} --location "Home-Office"
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not create network
    tags: 
      - test

#  - name: Invoke hammer to create environments
#    command: hammer lifecycle-environment create --name {{item}} --organization {{satellite_organization}} --prior Library
#    register: result
#    failed_when: "result.rc != 0 and result.rc != 65"
#    changed_when: "result.rc == 0"
#    # rc 65 = Could not create the lifecycle-environment: Name has already been taken
#    with_items:
#      - "{{environments}}"
#    tags: 
#      - test

  - name: Invoke hammer to create environments
    command: hammer lifecycle-environment create --name ctjon-Lab --organization {{satellite_organization}} --prior Library
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not create the lifecycle-environment: Name has already been taken
    tags: 
      - test

  - name: Invoke hammer to create an activation key
    command: hammer activation-key create --name ak-satclients --organization {{satellite_organization}} --lifecycle-environment {{item}}
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not create the activation_key: Name has already been taken
    with_items:
      - "{{environments}}"
    tags: 
      - enable_repos

  - name: Invoke hammer to create a synchronization plan
    command: hammer sync-plan create --name "{{satellite_organization}}_sync_plan" --enabled=true --interval hourly --organization {{satellite_organization}} --sync-date {{ansible_date_time.date}}
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not create the synchronization plan: already exists

  - name: Invoke hammer to create hostgroups
    command: hammer hostgroup create --name {{item.name}} --environment {{item.env}} --architecture {{item.arch}} --organization {{item.organization}} --location {{item.location}}
    register: result
    failed_when: "result.rc != 0 and result.rc != 65"
    changed_when: "result.rc == 0"
    # rc 65 = Could not create the organization: already exists
    with_items:
      - "{{host_groups}}"

#  - name: Invoke hammer to sync RedHat repositories
#    command: hammer repository synchronize --product '{{item.product}}' --name {'{item.product_name}}' --organization {{satellite_organization}} --async
#    with_items:
#      - "{{versioned_repos}}"
#      - "{{non_versioned_repos}}"
#    tags: 
#      - sync_repos

################################################################################
# Configure EPEL                                                               #
################################################################################
  - name: Configure EPEL
    block:
      - name: get EPEL Keys
        get_url:
          url: "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{item}}"
          dest: "{{user_home_dir}}/sat_files/RPM-GPG-KEY-EPEL-{{item}}"
          mode: 0644
        with_items:
          - "{{epel_versions}}"

      - name: Invoke Hammer to Install EPEL Keys
        command: hammer gpg create --key {{user_home_dir}}/sat_files/RPM-GPG-KEY-EPEL-{{item}} --name EPEL-{{item}} --organization {{satellite_organization}}
        with_items:
          - "{{epel_versions}}"
        register: result
        failed_when: "result.rc != 0 and result.rc != 65"
        changed_when: "result.rc == 0"
        # rc 65 = Could not create the key: Name has already been taken

      - name: Invoke Hammer to create EPEL Products
        command: hammer product create --name="EPEL" --organization {{satellite_organization}}
        register: result
        failed_when: "result.rc != 0 and result.rc != 65"
        changed_when: "result.rc == 0"
        # rc 65 = Could not create the product: Name has already been taken

      - name: Invoke Hammer to create EPEL Repositories
        command: hammer repository create --name="EPEL-{{item}}" --organization {{satellite_organization}} --product="EPEL" --content-type yum --publish-via-http=true --url=https://dl.fedoraproject.org/pub/epel/{{item}}/x86_64/
        with_items:
          - "{{epel_versions}}"
        register: result
        failed_when: "result.rc != 0 and result.rc != 65"
        changed_when: "result.rc == 0"
        # rc 65 = Could not create the repository: Name has already been taken
    when: sync_epel == true
    tags:
      - enable_repos
      - configure_epel

#  - name: Invoke hammer to sync EPEL repositories
#    command: hammer repository synchronize --name '{{item}}' --organization {{satellite_organization}} --async
#    with_items:
#      - "EPEL-{{epel_versions}}"
#    tags: 
#      - enable_repos
#      - sync_repos
################################################################################


  handlers:
  - name: restart chronyd
    service:
      name: chronyd
      state: restarted

