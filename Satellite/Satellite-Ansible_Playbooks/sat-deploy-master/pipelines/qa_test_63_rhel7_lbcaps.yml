- hosts: localhost
  vars:
    forklift_name: pipeline-satellite-6.3-rhel7-lbcaps
    forklift_boxes:
      satellite01:
        box: rhel7
        memory: 8192
      capsule01:
        box: rhel7
        memory: 3072
      capsule02:
        box: rhel7
        memory: 3072
      capshaproxy01:
        box: rhel7
        memory: 3072
      client01:
        box: rhel7
        memory: 3072
  roles:
    - forklift

- hosts: satellite01
  tasks:
    - set_fact:
        activation_key: "satellite-6.3-qa-rhel{{ ansible_distribution_major_version }}"
        katello_client_extra_repos:
          -  Sat6-CI_Satellite_6_3_Composes_Satellite_6_3_Puppet_4_RHEL7
        foreman_installer_additional_packages:
          - satellite

- hosts:
    - capsule01
    - capsule02
  tasks:
    - set_fact:
        activation_key: "capsule-6.3-qa-rhel{{ ansible_distribution_major_version }}"
        katello_client_extra_repos:
          - Sat6-CI_Satellite_Capsule_6_3_Composes_Satellite_Capsule_6_3_Puppet_4_RHEL7
        foreman_installer_additional_packages:
          - satellite-capsule

- hosts:
    - capshaproxy01
  tasks:
    - set_fact:
        activation_key: "rhel{{ ansible_distribution_major_version }}"

- hosts:
    - satellite01
    - capsule01
    - capsule02
    - capshaproxy01
  become: yes
  roles:
    - etc_hosts
    - dogfood_register
    - update_os_packages

- hosts:
    - satellite01
    - capsule01
    - capsule02
  become: yes
  vars:
    foreman_installer_skip_installer: true
  roles:
    - foreman_installer

- hosts: satellite01
  become: yes
  vars:
    foreman_installer_scenario: satellite
    foreman_installer_command: satellite-installer
    foreman_installer_disable_system_checks: true
    foreman_username: admin
    foreman_password: changeme
    foreman_server_url: https://{{ ansible_default_ipv4.address }}
    foreman_verify_ssl: False
    foreman_org: Default Organization
  roles:
    - foreman_installer
    - katello_manifest
    - satellite_client_repos
  tasks:
    - name: create hostgroup
      command: "hammer hostgroup create --name My_Hostgroup --organizations 'Default Organization' --content-view 'Default Organization View' --lifecycle-environment 'Library' --query-organization 'Default Organization'"
      ignore_errors: True
    - name: find subscription
      command: "hammer --output json subscription list --organization 'Default Organization' --search 'name = \"Red Hat Cloud Infrastructure, Premium (2-sockets)\"'"
      register: sub
    - set_fact:
        sub_json: "{{ sub.stdout | from_json }}"
    - name: create ak
      command: "hammer activation-key create --name My_Activation_Key --organization 'Default Organization' --lifecycle-environment 'Library' --content-view 'Default Organization View'"
      ignore_errors: True
    - name: add sub to ak
      command: "hammer activation-key add-subscription --name My_Activation_Key --organization 'Default Organization' --subscription-id {{ sub_json[0]['UUID'] }}"
      ignore_errors: True
    - name: create domain
      command: "hammer domain create --name {{ ansible_domain }}"
      ignore_errors: True
    - name: add domain to org
      command: "hammer domain update --name {{ ansible_domain }} --organizations 'Default Organization' --locations 'Default Location'"
      ignore_errors: True

- hosts:
    - capsule01
    - capsule02
  become: yes
  serial: 1
  vars:
    lbname: capsule.example.test
    foreman_proxy_content_server: "satellite01"
    foreman_installer_command: satellite-installer
    foreman_installer_scenario: capsule
    foreman_installer_disable_system_checks: true
    foreman_installer_options_internal_use_only:
      - "--foreman-proxy-trusted-hosts '{{ server_fqdn.stdout }}'"
      - "--foreman-proxy-trusted-hosts '{{ ansible_nodename }}'"
      - "--foreman-proxy-foreman-base-url 'https://{{ server_fqdn.stdout }}'"
      - "--foreman-proxy-register-in-foreman true"
      - "--foreman-proxy-oauth-consumer-key '{{ oauth_consumer_key.stdout }}'"
      - "--foreman-proxy-oauth-consumer-secret '{{ oauth_consumer_secret.stdout }}'"
      - "--foreman-proxy-content-certs-tar '{{ foreman_proxy_content_certs_tar }}'"
      - "--foreman-proxy-content-parent-fqdn '{{ server_fqdn.stdout }}'"
      - "--foreman-proxy-content-pulp-oauth-secret '{{ pulp_oauth_secret.stdout }}'"
      - "--puppet-server-foreman-url https://{{ server_fqdn.stdout }}"
      - "--puppet-dns-alt-names {{ lbname }}"
      - "--puppet-ca-server {{ hostvars['capsule01'].ansible_fqdn }}"
      - "--foreman-proxy-puppetca {{ (inventory_hostname == 'capsule01') | ternary('true','false') }}"
      - "--puppet-server-ca {{ (inventory_hostname == 'capsule01') | ternary('true','false') }}"
      - "--enable-foreman-proxy-plugin-remote-execution-ssh"
    foreman_proxy_content_certs_args: "--foreman-proxy-cname {{ lbname }}"
    foreman_installer_custom_hiera: |
      pulp::lazy_redirect_host: {{ lbname }}
    foreman_proxies:
      - capsule01
      - capsule02
  pre_tasks:
    - block:
      - name: install puppetserver for the puppet user
        yum:
          name: puppetserver
          state: present
      - name: create cert folders
        file:
          path: "/etc/puppetlabs/puppet/ssl/{{ item }}/"
          state: directory
          mode: 0750
          owner: puppet
          group: puppet
        with_items:
          - ['certs', 'private_keys', 'public_keys']
      - name: copy the CA cert
        copy:
          src: /tmp/proxycerts/certs/ca.pem
          dest: /etc/puppetlabs/puppet/ssl/certs/ca.pem
          owner: puppet
          group: puppet
      - name: copy the prepared puppet certs
        copy:
          src: "/tmp/proxycerts/{{ item }}/{{ ansible_fqdn }}.pem"
          dest: "/etc/puppetlabs/puppet/ssl/{{ item }}/{{ ansible_fqdn }}.pem"
          owner: puppet
          group: puppet
        with_items:
          - ['certs', 'private_keys', 'public_keys']
      - name: restore context of /etc/puppetlabs/puppet/ssl/
        command: restorecon -Rv /etc/puppetlabs/puppet/ssl/
      when:
        - inventory_hostname != 'capsule01'
  roles:
    - foreman_proxy_content
    - foreman_installer
  tasks:
    - block:
      - name: create certs for the other proxies
        command: "puppet cert generate {{ hostvars[item].ansible_fqdn }} --dns_alt_names={{ lbname }}"
        environment:
          PATH: "/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/puppetlabs/bin:/root/bin"
        args:
          creates: /etc/puppetlabs/puppet/ssl/certs/{{ hostvars[item].ansible_fqdn }}.pem
        with_items:
          - capsule02
      - name: fetch the certs
        fetch:
          src: "/etc/puppetlabs/puppet/ssl/{{ item[0] }}/{{ hostvars[item[1]].ansible_fqdn }}.pem"
          dest: "/tmp/proxycerts/{{ item[0] }}/{{ hostvars[item[1]].ansible_fqdn }}.pem"
          flat: True
        with_nested:
          - ['certs', 'private_keys', 'public_keys']
          - ['capsule02']
      - name: fetch the CA cert
        fetch:
          src: /etc/puppetlabs/puppet/ssl/certs/ca.pem
          dest: /tmp/proxycerts/certs/ca.pem
          flat: True
      when:
        - inventory_hostname == 'capsule01'
    - name: re-run installer to fix certs
      command: foreman-installer --disable-system-checks
    - name: assign organization and location
      command: "hammer proxy update --name {{ ansible_fqdn }} --organizations 'Default Organization' --locations 'Default Location'"
      delegate_to: satellite01
    - name: add LCE to proxy
      command: "hammer proxy content add-lifecycle-environment --environment Library --name {{ ansible_fqdn }} --organization 'Default Organization'"
      ignore_errors: True
      delegate_to: satellite01
    - name: synchronize proxy
      command: "hammer proxy content synchronize --name {{ ansible_fqdn }} --organization 'Default Organization'"
      delegate_to: satellite01

- hosts:
  - capshaproxy01
  become: yes
  vars:
    selinux_state: 'permissive'
    foreman_proxies:
      - capsule01
      - capsule02
  roles:
    - selinux
    - haproxy

- hosts:
  - client01
  become: yes
  vars:
    lbname: capsule.example.test
  roles:
    - etc_hosts
    - disable_firewall
  tasks:
    - name: discover facts from the other machines
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: yes
      with_items:
        - capshaproxy01
        - satellite01
        - capsule01
        - capsule02
    - name: add {{ lbname }} hosts entry
      lineinfile:
        dest: /etc/hosts
        line: "{{ hostvars['capshaproxy01'].ansible_default_ipv4.address }} {{ lbname }}"
    - name: add puppet autosign entry
      lineinfile:
        path: /etc/puppetlabs/puppet/autosign.conf
        line: "{{ ansible_fqdn }}"
      delegate_to: capsule01
    - name: fetch bootstrap.py
      get_url:
        url: https://raw.githubusercontent.com/Katello/katello-client-bootstrap/master/bootstrap.py
        dest: /root/bootstrap.py
        force: True
    - name: execute bootstrap.py
      command: python /root/bootstrap.py -l admin -p changeme -s {{ lbname }} -o 'Default Organization' -L 'Default Location' -g My_Hostgroup -a My_Activation_Key --unmanaged --puppet-ca-port 8141 --force --enablerepos=rhel-7-server-satellite-tools-6.3-rpms,rhel-7-server-satellite-tools-6.3-puppet4-rpms
    - name: install ssh keys
      authorized_key:
        user: root
        state: present
        key: https://{{ hostvars[item].ansible_fqdn }}:9090/ssh/pubkey
        validate_certs: False
      with_items:
        - capsule01
        - capsule02
        - satellite01
