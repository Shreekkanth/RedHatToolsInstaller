- name: create vagrant boxes
  hosts: localhost
  any_errors_fatal: true
  vars_files:
    - vars/satellite_base.yml
    - vars/install_base.yml
  roles:
    - forklift

- hosts:
    - "{{ satdeploy_server_name }}"
  any_errors_fatal: true
  vars_files:
    - vars/satellite_base.yml
    - vars/install_base.yml
  tasks:
    - set_fact:
        compose_repository_type: Satellite
        activation_key: "satellite-maintenance-next-qa-{{ pipeline_os }}"
        foreman_installer_additional_packages:
          - satellite

- hosts:
    - "{{ satdeploy_capsule_name }}"
  any_errors_fatal: true
  vars_files:
    - vars/satellite_base.yml
    - vars/install_base.yml
  tasks:
    - set_fact:
        compose_repository_type: Capsule
        activation_key: "satellite-maintenance-next-qa-{{ pipeline_os }}"
        foreman_installer_additional_packages:
          - satellite-capsule

- hosts:
    - "{{ satdeploy_server_name }}"
    - "{{ satdeploy_capsule_name }}"
  any_errors_fatal: true
  become: yes
  vars_files:
    - vars/satellite_base.yml
    - vars/install_base.yml
  vars:
    satellite_version: "{{ pipeline_version }}"
    compose_repository_version: "{{ pipeline_version }}"
    foreman_installer_skip_installer: true
  roles:
    - etc_hosts
    - dogfood_register
    - compose-repository
    - update_os_packages
    - foreman_installer

- hosts:
    - "{{ satdeploy_server_name }}"
  any_errors_fatal: true
  become: yes
  vars_files:
    - vars/satellite_base.yml
    - vars/install_base.yml
  roles:
    - role: foreman_installer
      foreman_installer_scenario: satellite
      foreman_installer_command: satellite-installer
      foreman_installer_disable_system_checks: true

- hosts:
    - "{{ satdeploy_capsule_name }}"
  any_errors_fatal: true
  become: yes
  vars_files:
    - vars/satellite_base.yml
    - vars/install_base.yml
  vars:
    foreman_proxy_content_server: "{{ satdeploy_server_name }}"
  roles:
    - foreman_proxy_content
    - role: foreman_installer
      foreman_installer_command: satellite-installer
      foreman_installer_scenario: capsule
      foreman_installer_disable_system_checks: true
      foreman_installer_options_internal_use_only:
        - '--certs-tar-file "{{ foreman_proxy_content_certs_tar }}"
          --foreman-proxy-trusted-hosts "{{ server_fqdn.stdout }}"
          --foreman-proxy-trusted-hosts "{{ ansible_nodename }}"
          --foreman-proxy-foreman-base-url "https://{{ server_fqdn.stdout }}"
          --foreman-proxy-register-in-foreman true
          --foreman-proxy-oauth-consumer-key "{{ oauth_consumer_key.stdout }}"
          --foreman-proxy-oauth-consumer-secret "{{ oauth_consumer_secret.stdout }}"
          --foreman-proxy-content-parent-fqdn "{{ server_fqdn.stdout }}"
          --puppet-server-foreman-url "https://{{ server_fqdn.stdout }}"'

- hosts:
    - "{{ satdeploy_server_name }}"
  any_errors_fatal: true
  become: yes
  vars_files:
    - vars/satellite_base.yml
    - vars/install_base.yml
  pre_tasks:
    - name: load version specific vars
      include_vars: "{{ item }}"
      loop: "{{ query('first_found', ['vars/satellite_{{ pipeline_version }}.yml'], errors='ignore') }}"
    - name: Unlock packages
      command: foreman-maintain packages unlock
    - name: Enable extras repository for test dependencies
      command: subscription-manager repos --enable rhel-7-server-extras-rpms
  roles:
    - bats
  post_tasks:
    - name: Lock packages
      command: foreman-maintain packages lock
    - name: Disable extras repository for test dependencies
      command: subscription-manager repos --disable rhel-7-server-extras-rpms
      ignore_errors: True
