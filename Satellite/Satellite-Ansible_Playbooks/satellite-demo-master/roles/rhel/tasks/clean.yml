# vim: sw=2 ai ts=102
---
- name: check if direct systems are up
  wait_for:
    host: "{{ ansible_host }}"
    search_regex: OpenSSH
    port: 22
    timeout: 20
  delegate_to: "{{ delegate_ip }}"
  remote_user: root
  when: inventory_hostname in groups.direct
  async: 25
  poll: 5
  register: check_up_direct
  ignore_errors: True

- name: rewrite check variable
  set_fact:
    check_up_test:
      direct: "{{ check_up_direct.failed | default(False) }}"
      proxied: true

- name: check if proxied systems are up
  wait_for:
    host: "{{ ansible_host }}"
    search_regex: OpenSSH
    port: 22
    timeout: 20
  delegate_to: "{{ delegate_ip }}"
  remote_user: root
  when: "inventory_hostname in groups.proxied and (hostvars[router_server].check_up_test|default({})).direct|default(False) == False"
  async: 40
  poll: 5
  register: check_up_proxied
  ignore_errors: True

- name: rewrite check variable
  set_fact:
    check_up_test:
      direct: "{{ check_up_test.direct }}"
      proxied: "{{ ( inventory_hostname in groups.proxied and (check_up_proxied.failed|default(False) or check_up_proxied.skipped|default(False)) ) }}"

- name: unregister system
  redhat_subscription:
    state: absent
  when: "(check_up_test.proxied or check_up_test.direct ) == False"
  async: 60
  poll: 10
  ignore_errors: True
