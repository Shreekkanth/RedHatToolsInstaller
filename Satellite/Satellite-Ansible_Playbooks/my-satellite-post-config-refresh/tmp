create_activation_keys () {
    if [ "$create_activationkey" == "yes" ];
    then
        # get list of subscriptions
        hammer --csv --csv-separator '#' subscription list --per-page 9999 --organization \
               ${ORG} > $PRODUCT_SUBS_LIST

        # Get the list of all activation keys
        hammer --output json activation-key list --organization "$ORG"| \
               awk '/Name/ {print $0}' > $ACTIVATION_KEYS

        for LC_ENV in $(echo ${LC_ENVS})
        do
            LC_ENV_LOWER=$(echo ${LC_ENV} | tr '[[:upper:]' '[[:lower:]]')
            LC_ENV_UPPER=$(echo ${LC_ENV} | tr '[[:lower:]' '[[:upper:]]')
            ACT_KEY="act-${LC_ENV_LOWER}-${TYPE}-${ROLE}-${ARCH}"

            # Create activation key if it does not exist
            grep "$ACT_KEY" $ACTIVATION_KEYS >/dev/null
            if [ "$?" -ne "0" ];
            then
                echo "creating activation key $ACT_KEY"
                echo hammer activation-key create --name "$ACT_KEY" --content-view "$CV" \
                     --lifecycle-environment "${LC_ENV}" --organization "${ORG}"|sh
            fi

            # Get activation key id
            ACT_KEY_ID=$(hammer activation-key list --name $ACT_KEY --organization $ORG | grep -o "^[0-9].")

            # Add subscriptions to activation key
            while IFS=, read product sub;
            do
                SubID=$(grep "$product" $PRODUCT_SUBS_LIST |grep $sub | awk -F'#' '{print $1}')
                ATTACHED_SUBS=$(hammer --output csv activation-key subscriptions --name $ACT_KEY --organization $ORG | grep "$product" |awk -F, '{print $1}')
                if [ "$SubID" != "$ATTACHED_SUBS" ]; 
                then
                    echo "ensureing subscription ids $SubID to $ACT_KEY"
                    echo hammer activation-key add-subscription --name "$ACT_KEY" --subscription-id \
                         "${SubID}" --organization "${ORG}"|sh
                    echo SUBID="${SubID}"
                fi
            done < $SUBSCRIPTIONS


            # Get repos enabled for this activation key
            PRODUCT_CONTENT=$(mktemp)
            hammer --no-headers --output csv activation-key product-content --name $ACT_KEY \
                   --organization $ORG | awk -F',' '{print $3}' > $PRODUCT_CONTENT


            # Ensure these repos are enabled
            while read repo;
            do
                grep "$repo" $PRODUCT_CONTENT >/dev/null || {
                    echo -n "ensuring $repo with $ACT_KEY..."
                    echo hammer activation-key content-override --id $ACT_KEY_ID --organization "$ORG" \
                         --content-label "'${repo}'" --value 1|sh
                }
            done < $ACTKEY_REPOS
        done
    fi
}
