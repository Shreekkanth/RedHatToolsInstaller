# Installed by Satellite Ansible Installer
# Config type: {{config_type}}

# Interval default is 10s
Interval {{collectd_interval}}

# Hostname for this machine, if not defined, use gethostname(2) system call
Hostname "{{inventory_hostname}}"

# Allow collectd to log
LoadPlugin syslog

# Loaded Plugins:
LoadPlugin write_graphite
LoadPlugin cpu
LoadPlugin df
LoadPlugin disk
LoadPlugin interface
LoadPlugin irq
LoadPlugin load
LoadPlugin memory
LoadPlugin numa
LoadPlugin processes
LoadPlugin postgresql
LoadPlugin swap
LoadPlugin turbostat
LoadPlugin unixsock
LoadPlugin uptime

# Open unix domain socket for collectdctl
<Plugin unixsock>
  SocketFile "/var/run/collectd-unixsock"
  SocketGroup "collectd"
  SocketPerms "0770"
  DeleteSocket true
</Plugin>

LoadPlugin apache
<Plugin apache>
    # Leave "Instance" blank unless you have multiple
    # Apache instances, in which case you can provide
    # a name to identify each instance
   <Instance "">
       URL "http://127.0.0.1/server-status?auto"
   </Instance>
</Plugin>

# Graphite Host Configuration
<Plugin write_graphite>
  <Carbon>
    Host "{{groups['graphite']|first}}"
    Port "2003"
    Prefix "{{graphite_prefix}}."
    Protocol "tcp"
    LogSendErrors true
    StoreRates true
    AlwaysAppendDS false
    EscapeCharacter "_"
  </Carbon>
</Plugin>

<Plugin df>
  ValuesPercentage true
</Plugin>

<Plugin disk>
  Disk "/^[hsv]d[a-z]+[0-9]?$/"
  IgnoreSelected false
</Plugin>

<Plugin postgresql>
  <Database candlepin>
    Host "localhost"
    Port "5432"
    User "candlepin"
    Password "{{satellite_candlepin_password.stdout|ini_value}}"
    # Predefined:
    Query backends
    Query transactions
    Query queries
    Query table_states
    Query disk_io
    Query disk_usage
  </Database>
  <Database foreman>
    Host "localhost"
    Port "5432"
    User "foreman"
    Password "{{satellite_foreman_password.stdout}}"
    # Predefined:
    Query backends
    Query transactions
    Query queries
    Query table_states
    Query disk_io
    Query disk_usage
  </Database>
</Plugin>

<Plugin processes>
  # DynFlow
  ProcessMatch "dynflow_executor" "dynflow.+executor$"
  ProcessMatch "dynflow_executor_monitor" "dynflow.+executor.+monitor$"

  # Elasticsearch
  ProcessMatch "Elasticsearch" ".*elasticsearch.*"

  # Apache
  Process "httpd"

  # Mongodb
  Process "mongod"

  # Passenger
  ProcessMatch "Passenger-Forman" "Passenger.+RackApp:.+/usr/share/foreman"
  ProcessMatch "Passenger-Puppet" "Passenger.+RackApp:.+/etc/puppet/rack"
  ProcessMatch "PassengerHelperAgent" "PassengerHelperAgent"
  ProcessMatch "PassengerLoggingAgent" "PassengerLoggingAgent"
  ProcessMatch "PassengerWatchdog" "PassengerWatchdog"

  # Postgres database
  ProcessMatch "postgres" "postgres.*"

  # Pulp
  ProcessMatch "Pulp-Scheduler" "/usr/bin/python.+/usr/bin/celery.+beat.+--scheduler=pulp.server.async.scheduler.Scheduler"
  ProcessMatch "Pulp-Resource-Manager" "/usr/bin/python.+/usr/bin/celery.+worker.+-A.+pulp.server.async.app.+-n.+resource_manager"
  ProcessMatch "Pulp-Resource-Worker" "/usr/bin/python.+/usr/bin/celery.+worker.+-n.+reserved_resource_worker"

  # Puppet Agent
  ProcessMatch "Puppet-Agent" "/usr/bin/ruby.+/usr/bin/puppet.+agent.+--no-daemonize"

  # Qpidd + dispatch router
  Process "qdrouterd"
  Process "qpidd"

  # Foreman smart proxy
  ProcessMatch "Foreman-SmartProxy" "ruby.+/usr/share/foreman-proxy/bin/smart-proxy"

  # Tomcat
  ProcessMatch "Tomcat" ".*tomcat.*"

  # Other background tasks
  ProcessMatch "Trends:Counter" "/opt/rh/ruby193/root/usr/bin/ruby.+/opt/rh/ruby193/root/usr/bin/rake.+trends:counter"
  ProcessMatch "LDAP:Refresh_usergroups" "/opt/rh/ruby193/root/usr/bin/ruby.+/opt/rh/ruby193/root/usr/bin/rake.+ldap:refresh_usergroups"

  Process "ruby"

  # Collect on collectd process
  ProcessMatch "collectd" "/usr/sbin/collectd.+-C.+/etc/collectd.conf"
</Plugin>

<Plugin swap>
  ReportBytes true
  ValuesPercentage true
</Plugin>

# Include other collectd configuration files
Include "/etc/collectd.d"
